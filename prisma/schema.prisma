// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

model Account {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  records   Record[]
  role      String
  name      String
  image     String?
  createdAt DateTime?
  updatedAt DateTime?
  Session   Session[]
}

model Session {
  id        String   @id @default(uuid())
  token     String   @unique
  expiresAt DateTime
  account   Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String
  createdAt DateTime @default(now())

  @@index([accountId])
}

model Settings {
  id        String   @id @default(uuid())
  name      String   @unique
  value     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Record {
  id       String   @id @default(uuid())
  category String?
  name     String?  @default("Untitled")
  date     DateTime @default(now())
  image    String?
  email    String?
  phone    String?
  address  String?
  desc     String?

  Account   Account? @relation(fields: [accountId], references: [id])
  accountId String?
}

model Transaction {
  id          Int      @id @default(autoincrement())
  tableId     Int
  amount      Int      @default(0)
  type        String
  description String?
  date        DateTime @default(now())
  qty         Int      @default(1)
  Note        Note?    @relation(fields: [noteId], references: [id])
  noteId      String?
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String   @unique
  address   String?
  notes     Note[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id           String        @id @default(uuid())
  title        String
  content      String
  total        Float         @default(0)
  status       String?
  avatar       String?
  transactions Transaction[]
  active       Boolean       @default(true)
  updatedAt    DateTime      @updatedAt
  createdAt    DateTime      @default(now())
  Customer     Customer?     @relation(fields: [customerId], references: [id])
  customerId   String?
}

model Stock {
  id        String   @id @default(uuid())
  name      String
  quantity  Int      @default(0)
  price     Float    @default(0)
  revenue   Float    @default(0)
  barcode   String?
  qrcode    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Asset {
  id        String   @id @default(uuid())
  name      String
  quantity  Int      @default(0)
  price     Float    @default(0)
  barcode   String?
  qrcode    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id         String   @id @default(uuid())
  empId      String   @unique
  name       String
  email      String   @unique
  phone      String   @unique
  address    String?
  department String?
  role       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Supplier {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String   @unique
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
